#include<stdio.h>
#include<math.h>
#include<iostream>
#include<time.h>
#include<locale.h>
#include<stdarg.h>
using namespace std;

void IsPrime(int N);
void IsPowerN(int K, int N);
int Digit(int K, int N);
double DegToRad(double D);
double RadToDeg(double R);
int Fact(int n);
void main()
{
	srand(time(NULL));
	setlocale(LC_ALL, "rus");
	cout << "Ведите номер задания :" << endl;
	int x;
	cin >> x;
	switch (x)
	{
	case 1:
	{
		/*Описать функцию IsPowerN(K, N) логического типа, возвращающую True,
		если целый параметр K (> 0) является степенью числа N (> 1), и False в противном случае.
		Дано число N (> 1) и набор из 10 целых положительных чисел.
		С помощью функции IsPowerN найти количество степеней числа N в данном наборе.
		*/
		int  K, N;
		cin >> K;
		cin >> N;
		IsPowerN(K, N);
	}break;
	case 2:
	{
		/*Описать функцию IsPrime(N) логического типа, возвращающую True,
		если целый параметр N (> 1) является простым числом, и False в противном случае
		(число, большее 1, называется простым, если оно не имеет положительных делителей, кроме 1 и самого себя).
		Дан набор из 10 целых чисел, больших 1. С помощью функции IsPrime найти количество простых чисел в данном наборе.
		*/
		int N;
		cin >> N;
		IsPrime(N);


	}break;
	case 3:
	{
		/*Описать функцию DigitN(K, N) целого типа, возвращающую N-ю цифру целого положительного
		числа K (цифры в числе нумеруются справа на- лево). Если количество цифр в числе K меньше N,
		то функция возвращает –1. Для каждого из пяти данных целых положительных чисел K1, K2, …, K5
		вызвать функцию DigitN с параметром N, изменяющимся от 1 до 5.
		*/
		int K, N;
		cout << "N = ";
		cin >> N;
		for (int i = 0; i < 5; i++) {
			cout << "K" << i + 1 << " = ";
			cin >> K;
			cout << "DigitN = " << Digit(K, N) << endl;
		}break;
	case 4:
	{
		/*Описать функцию DegToRad(D) вещественного типа, находящую величину угла в радианах,
		если дана его величина D в градусах (D — вещественное число, 0 < D < 360).
		Воспользоваться следующим соотношением: 180° = ? радианов.
		В качестве значения ? использовать 3.14.
		С помощью функции DegToRad перевести из градусов в радианы пять данных углов*/
		double D;
		for (int i = 1; i <= 5; i++)
		{
			cout << "Введите величину угла в градусах: ";
			cin >> D;
			if (D < 0 || D>360)
			{
				cout << "D — вещественное число, 0 < D < 360 ";
				system("pause");
			}
			double M = DegToRad(D);
			cout << "Угол в " << D << " градусов равен " << M << " радиан";
			cout << endl;
		}
	}break;
	case 5:
	{
		/*Описать функцию RadToDeg(R) вещественного типа, находящую величину угла в градусах,
		если дана его величина R в радианах (R — вещественное число, 0 < R < 2·pi).
		Воспользоваться следующим соотношением: 180° = pi радианов.
		В качестве значения pi использовать 3.14.
		С помощью функции RadToDeg перевести из радианов в градусы пять данных углов*/
		double R;
		for (int i = 1; i <= 5; i++)
		{
			cout << "Введите величину " << i << "= угла в градусах: ";
			cin >> R;
			if (R < 0 || 2 * 3.14)
			{
				cout << "R — вещественное число, 0 < R < 2·pi" << endl;
			}
			double M = RadToDeg(R);
			cout << "Угол в " << R << "радианов равен " << M << "градус";
			cout << endl;
		}
	}break;
	case 6:
	{
		/*Описать функцию Fact(N) вещественного типа, вычисляющую значение
		факториала N! = 1·2·…·N (N > 0 — параметр целого типа; вещественное возвращаемое значение используется для того,
		чтобы избежать цело- численного переполнения при больших значениях N).
		С помощью этой функции найти факториалы пяти данных целых чисел.*/
		int n;
		for (int i = 1; i <= 5; i++)
		{
			cout << "Введите " << i << " число:";
			cin >> n;
			int m = Fact(n);
			cout << m << endl;
		}
	}break;

	}
	}

}

/////////////////////////////////////////////////
void IsPrime(int N)
{

	if (((N / N) == 0) && (N / 1) == 0)
	{
		cout << "true";
	}
	else
	{
		cout << "False" << endl;
	}
}
void IsPowerN(int K, int N)
{
	if (!(K % N))
	{
		K /= N;
		cout << "true";
	}
	else
		cout << "False" << endl;
}



int Digit(int K, int N)
{
	int cnt = 0;
	while (K)
	{
		cnt++;
		if (cnt == N)
			return K % 10;
		K /= 10;
	}
	return -1;
}
double DegToRad(double D)
{
	double M = 3.14 / 180;
	return D*M;
}
double RadToDeg(double R)
{
	return R / 3.14*180.;
}
int Fact(int n)
{
	int f = 1;
	for (int i = 1; i <= n; i++)
		f *= i;

	return f;
}